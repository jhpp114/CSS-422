00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 4/11/2020 6:14:13 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :Lab1  Question2   
00000000                             3  * Written by :Jun H Park    
00000000                             4  * Date       :04/08/2020    
00000000                             5  * Description:Input, branching  
00000000                             6  *-----------------------------------------------------------
00001000                             7      ORG    $1000
00001000                             8  START:                  ; first instruction of program
00001000                             9  
00001000                            10  * Put program code here
00001000                            11  * Code for output
00001000  43F9 000010E8             12  LOOP    LEA MESSAGE,    A1  
00001006  103C 000E                 13      MOVE.B  #14, D0
0000100A  4E4F                      14      TRAP #15
0000100C                            15  * COde for input
0000100C  103C 0004                 16      MOVE.B  #4, D0  ; Trap task 4   
00001010  4E4F                      17      TRAP    #15 
00001012  B2BC 001B1459             18      CMP.L   #1774681,   D1  ;   Compare Exit key
00001018  6700 00B8                 19      BEQ DONE    ;   Move if they are match
0000101C                            20      *   Validation Check    
0000101C  B2BC 00000014             21      CMP.L   #20,    D1  ;   Compare 
00001022  6D00 0024                 22      BLT INVALID 
00001026  B2BC 00000019             23      CMP.L   #25,    D1  ;   Compare 
0000102C  6E00 001A                 24      BGT INVALID 
00001030                            25      *   End of Validation Check 
00001030  B2BC 00000014             26      CMP.L   #20,    D1  
00001036                            27      *   USE BNE to check if it is not equal to 20   
00001036  6600 001E                 28      BNE FONE    * If different direct to FONE   
0000103A  43F9 00001162             29      LEA MESSAGEZERO,    A1  
00001040  103C 000E                 30      MOVE.B  #14,    D0  
00001044  4E4F                      31      TRAP    #15 
00001046  60B8                      32      BRA LOOP    ;   if not equal go back to Loop    
00001048                            33  
00001048                            34  * Code for Invalid message    
00001048  43F9 00001136             35  INVALID    LEA INV,    A1
0000104E  103C 000E                 36          MOVE.B  #14,    D0  
00001052  4E4F                      37          TRAP    #15 
00001054  60AA                      38          BRA LOOP  
00001056                            39  
00001056                            40  * Code for Message 1  
00001056  B2BC 00000015             41  FONE    CMP.L   #21,    D1
0000105C  6600 0010                 42              BNE FTWO
00001060  43F9 0000118C             43              LEA MESSAGEONE, A1
00001066  103C 000E                 44        MOVE.B  #14,    D0  
0000106A  4E4F                      45        TRAP    #15 
0000106C  6092                      46        BRA LOOP
0000106E                            47  * Code for Message 2
0000106E  B2BC 00000016             48  FTWO    CMP.L   #22,    D1
00001074  6600 0012                 49          BNE FTHREE  
00001078  43F9 000011B6             50          LEA MESSAGETWO, A1  
0000107E  103C 000E                 51          MOVE.B  #14,    D0  
00001082  4E4F                      52          TRAP    #15 
00001084  6000 FF7A                 53          BRA LOOP    
00001088                            54  *   Code for Message 3
00001088  B2BC 00000017             55  FTHREE  CMP.L   #23,    D1  
0000108E  6600 0012                 56          BNE FFOUR   
00001092  43F9 000011E0             57          LEA MESSAGETHREE, A1  
00001098  103C 000E                 58          MOVE.B  #14, D0  
0000109C  4E4F                      59          TRAP    #15 
0000109E  6000 FF60                 60          BRA LOOP    
000010A2                            61  * Code for Message 4
000010A2  B2BC 00000018             62  FFOUR   CMP.L   #24,    D1  
000010A8  6600 0012                 63          BNE FFIVE   
000010AC  43F9 0000120A             64          LEA  MESSAGEFOUR, A1
000010B2  103C 000E                 65                 MOVE.B   #14,    D0
000010B6  4E4F                      66                 TRAP #15
000010B8  6000 FF46                 67                  BRA LOOP 
000010BC                            68  * Code for Message 5
000010BC  B2BC 00000018             69  FFIVE   CMP.L   #24,    D1
000010C2  43F9 00001234             70          LEA MESSAGEFIVE, A1
000010C8  103C 000E                 71                 MOVE.B   #14, D0
000010CC  4E4F                      72                  TRAP    #15 
000010CE  6000 FF30                 73                  BRA LOOP  
000010D2                            74  * Terminate the program
000010D2  43F9 0000112D             75  DONE    LEA BYE, A1  
000010D8  103C 000E                 76          MOVE.B  #14,    D0  
000010DC  4E4F                      77          TRAP    #15 
000010DE  103C 0009                 78          MOVE.B  #9, D0
000010E2  4E4F                      79          TRAP    #15    ; Read a number from the keyboard into D1.L 
000010E4                            80      
000010E4  FFFF FFFF                 81      SIMHALT             ; halt simulator
000010E8                            82  
000010E8                            83  * Put variables and constants here
000010E8  =0000000D                 84  CR  EQU $0D
000010E8  =0000000A                 85  LF  EQU $0A 
000010E8= 45 6E 74 65 72 20 ...     86  MESSAGE DC.B    'Enter a number between 20 to 25 (inclusive) To Exit: enter 1774681: ',0
0000112D= 47 6F 6F 64 20 42 ...     87  BYE DC.B    'Good Bye', 0   
00001136= 54 68 61 74 20 69 ...     88  INV DC.B    'That is not between 20 to 25 (inclusive).', CR, LF,0
00001162= 59 6F 75 20 54 79 ...     89  MESSAGEZERO  DC.B    'You Typed 20 and 20 in binary is: 10100',  CR, LF, 0
0000118C= 59 6F 75 20 54 79 ...     90  MESSAGEONE  DC.B    'You Typed 21 and 21 in binary is: 10101',   CR,  LF, 0
000011B6= 59 6F 75 20 54 79 ...     91  MESSAGETWO    DC.B    'You Typed 22 and 22 in binary is: 10110',  CR, LF, 0
000011E0= 59 6F 75 20 54 79 ...     92  MESSAGETHREE DC.B    'You Typed 23 and 23 in binary is: 10111', CR, LF, 0
0000120A= 59 6F 75 20 54 79 ...     93  MESSAGEFOUR DC.B    'You Typed 24 and 24 in binary is: 11000',   CR, LF, 0
00001234= 59 6F 75 20 54 79 ...     94  MESSAGEFIVE DC.B    'You Typed 25 and 25 in binary  is: 11001', CR, LF, 0
0000125F                            95      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
BYE                 112D
CR                  D
DONE                10D2
FFIVE               10BC
FFOUR               10A2
FONE                1056
FTHREE              1088
FTWO                106E
INV                 1136
INVALID             1048
LF                  A
LOOP                1000
MESSAGE             10E8
MESSAGEFIVE         1234
MESSAGEFOUR         120A
MESSAGEONE          118C
MESSAGETHREE        11E0
MESSAGETWO          11B6
MESSAGEZERO         1162
START               1000
